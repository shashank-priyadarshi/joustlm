{
    "openapi": "3.0.3",
    "info": {
        "title": "JoustLM LLM Knowledge Extractor API",
        "description": "A modern LLM knowledge extractor service that takes unstructured text input and uses an LLM to produce both summaries and structured data. Built as a 90-minute take-home assignment.",
        "version": "1.0.0",
        "contact": {
            "name": "Shashank Priyadarshi",
            "email": "email@ssnk.in"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "servers": [
        {
            "url": "http://localhost:8080",
            "description": "Development server"
        }
    ],
    "tags": [
        {
            "name": "Authentication",
            "description": "User authentication and session management"
        },
        {
            "name": "LLM Extraction",
            "description": "Core LLM text analysis and knowledge extraction (Assignment Core)"
        },
        {
            "name": "Knowledge Management",
            "description": "Knowledge base management operations"
        },
        {
            "name": "Health",
            "description": "System health and status checks"
        }
    ],
    "paths": {
        "/health": {
            "get": {
                "tags": [
                    "Health"
                ],
                "summary": "Health check",
                "description": "Returns the health status of the service",
                "operationId": "getHealth",
                "responses": {
                    "200": {
                        "description": "Service is healthy",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HealthResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/signup": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User signup",
                "description": "Register a new user account",
                "operationId": "signup",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SignupRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SignupResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - username already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "description": "Authenticate user and return JWT tokens",
                "operationId": "login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User logout",
                "description": "Logout user and invalidate session",
                "operationId": "logout",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Logout successful"
                    },
                    "401": {
                        "description": "Unauthorized - invalid or missing token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/extract": {
            "post": {
                "tags": [
                    "LLM Extraction"
                ],
                "summary": "Extract knowledge from text",
                "description": "Submit unstructured text to LLM for analysis and extract structured knowledge (Assignment Core Requirement)",
                "operationId": "extractKnowledge",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LLMAnalysisRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Knowledge extracted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LLMAnalysisResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid input or empty text",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - invalid or missing token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error - LLM API failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/extract/{id}": {
            "get": {
                "tags": [
                    "LLM Extraction"
                ],
                "summary": "Get extraction result",
                "description": "Retrieve extraction result by ID",
                "operationId": "getExtractionResult",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "UUID of the extraction result",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Extraction result retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LLMAnalysisResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid extraction ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - invalid or missing token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found - extraction result not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/knowledge": {
            "get": {
                "tags": [
                    "Knowledge Management"
                ],
                "summary": "Get knowledge entries",
                "description": "Retrieve paginated list of knowledge entries",
                "operationId": "getKnowledge",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of entries per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100,
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Knowledge entries retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetKnowledgeResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - invalid or missing token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Knowledge Management"
                ],
                "summary": "Create knowledge entry",
                "description": "Add new knowledge entry manually",
                "operationId": "createKnowledge",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateKnowledgeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Knowledge entry created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KnowledgeBaseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - invalid or missing token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/knowledge/{id}": {
            "put": {
                "tags": [
                    "Knowledge Management"
                ],
                "summary": "Update knowledge entry",
                "description": "Update an existing knowledge entry",
                "operationId": "updateKnowledge",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "UUID of the knowledge entry to update",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateKnowledgeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Knowledge entry updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KnowledgeBaseEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid input or knowledge entry ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - invalid or missing token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found - knowledge entry not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Knowledge Management"
                ],
                "summary": "Delete knowledge entry",
                "description": "Delete a knowledge entry by ID",
                "operationId": "deleteKnowledge",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "UUID of the knowledge entry to delete",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Knowledge entry deleted successfully"
                    },
                    "400": {
                        "description": "Bad request - invalid knowledge entry ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - invalid or missing token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found - knowledge entry not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/search": {
            "get": {
                "tags": [
                    "Knowledge Management"
                ],
                "summary": "Search knowledge by topic",
                "description": "Search stored knowledge entries by topic, keyword, or sentiment (Assignment Requirement)",
                "operationId": "searchKnowledge",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "topic",
                        "in": "query",
                        "description": "Topic to search for",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "Keyword to search for",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sentiment",
                        "in": "query",
                        "description": "Sentiment to filter by (positive, neutral, negative)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "positive",
                                "neutral",
                                "negative"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100,
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search results retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid search parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - invalid or missing token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api": {
            "get": {
                "tags": [
                    "Health"
                ],
                "summary": "OpenAPI specification",
                "description": "Returns the OpenAPI 3.0.3 specification for this API",
                "operationId": "getOpenAPISpec",
                "responses": {
                    "200": {
                        "description": "OpenAPI specification",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "OpenAPI 3.0.3 specification"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/metrics": {
            "get": {
                "tags": [
                    "Health"
                ],
                "summary": "Get LLM analysis metrics",
                "description": "Returns system metrics for LLM text analysis including analysis counts, user counts, total texts processed, and average confidence scores",
                "operationId": "getMetrics",
                "responses": {
                    "200": {
                        "description": "Metrics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetricsResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "BearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "description": "JWT token for authentication"
            }
        },
        "schemas": {
            "SignupRequest": {
                "type": "object",
                "required": [
                    "username",
                    "password"
                ],
                "properties": {
                    "username": {
                        "type": "string",
                        "description": "Username for the account",
                        "minLength": 1
                    },
                    "password": {
                        "type": "string",
                        "description": "Password for the account",
                        "minLength": 6
                    }
                }
            },
            "SignupResponse": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "description": "JWT access token"
                    },
                    "refresh_token": {
                        "type": "string",
                        "description": "JWT refresh token"
                    },
                    "expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Token expiration time"
                    }
                }
            },
            "LoginRequest": {
                "type": "object",
                "required": [
                    "username",
                    "password"
                ],
                "properties": {
                    "username": {
                        "type": "string",
                        "description": "Username for authentication"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password for authentication"
                    }
                }
            },
            "LoginResponse": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "description": "JWT access token"
                    },
                    "refresh_token": {
                        "type": "string",
                        "description": "JWT refresh token"
                    },
                    "expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Token expiration time"
                    }
                }
            },
            "LLMAnalysisRequest": {
                "type": "object",
                "required": [
                    "text"
                ],
                "properties": {
                    "text": {
                        "type": "string",
                        "description": "Unstructured text input for LLM analysis",
                        "minLength": 1,
                        "example": "Artificial intelligence is transforming the way we work and live..."
                    }
                }
            },
            "LLMAnalysisResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Unique analysis identifier"
                    },
                    "text": {
                        "type": "string",
                        "description": "Original input text"
                    },
                    "title": {
                        "type": "string",
                        "description": "Extracted title (if available)"
                    },
                    "summary": {
                        "type": "string",
                        "description": "1-2 sentence summary generated by LLM"
                    },
                    "topics": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of 3 key topics extracted by LLM",
                        "maxItems": 3,
                        "minItems": 3
                    },
                    "sentiment": {
                        "type": "string",
                        "description": "Sentiment analysis result",
                        "enum": [
                            "positive",
                            "neutral",
                            "negative"
                        ]
                    },
                    "keywords": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of 3 most frequent nouns (custom implementation)",
                        "maxItems": 3,
                        "minItems": 3
                    },
                    "confidence": {
                        "type": "number",
                        "format": "float",
                        "description": "Analysis confidence score",
                        "minimum": 0,
                        "maximum": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Analysis creation timestamp"
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if analysis failed"
                    }
                }
            },
            "KnowledgeBaseEntry": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Unique knowledge entry identifier"
                    },
                    "user_id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "User who created this entry"
                    },
                    "text": {
                        "type": "string",
                        "description": "Original input text"
                    },
                    "title": {
                        "type": "string",
                        "description": "Extracted title (if available)"
                    },
                    "summary": {
                        "type": "string",
                        "description": "1-2 sentence summary"
                    },
                    "topics": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of 3 key topics"
                    },
                    "sentiment": {
                        "type": "string",
                        "description": "Sentiment analysis result",
                        "enum": [
                            "positive",
                            "neutral",
                            "negative"
                        ]
                    },
                    "keywords": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of 3 most frequent nouns"
                    },
                    "confidence": {
                        "type": "number",
                        "format": "float",
                        "description": "Analysis confidence score"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Entry creation timestamp"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Entry last update timestamp"
                    }
                }
            },
            "CreateKnowledgeRequest": {
                "type": "object",
                "required": [
                    "text",
                    "summary",
                    "topics",
                    "sentiment",
                    "keywords"
                ],
                "properties": {
                    "text": {
                        "type": "string",
                        "description": "Original input text",
                        "minLength": 1
                    },
                    "title": {
                        "type": "string",
                        "description": "Title (optional)"
                    },
                    "summary": {
                        "type": "string",
                        "description": "1-2 sentence summary",
                        "minLength": 1
                    },
                    "topics": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of 3 key topics",
                        "minItems": 1,
                        "maxItems": 3
                    },
                    "sentiment": {
                        "type": "string",
                        "description": "Sentiment analysis result",
                        "enum": [
                            "positive",
                            "neutral",
                            "negative"
                        ]
                    },
                    "keywords": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of 3 most frequent nouns",
                        "minItems": 1,
                        "maxItems": 3
                    },
                    "confidence": {
                        "type": "number",
                        "format": "float",
                        "description": "Analysis confidence score",
                        "minimum": 0,
                        "maximum": 1
                    }
                }
            },
            "UpdateKnowledgeRequest": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "description": "Updated title"
                    },
                    "summary": {
                        "type": "string",
                        "description": "Updated summary"
                    },
                    "topics": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Updated topics array"
                    },
                    "sentiment": {
                        "type": "string",
                        "description": "Updated sentiment",
                        "enum": [
                            "positive",
                            "neutral",
                            "negative"
                        ]
                    },
                    "keywords": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Updated keywords array"
                    },
                    "confidence": {
                        "type": "number",
                        "format": "float",
                        "description": "Updated confidence score",
                        "minimum": 0,
                        "maximum": 1
                    }
                }
            },
            "GetKnowledgeResponse": {
                "type": "object",
                "properties": {
                    "knowledge": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KnowledgeBaseEntry"
                        },
                        "description": "Array of knowledge entries"
                    },
                    "currentPage": {
                        "type": "integer",
                        "description": "Current page number"
                    },
                    "totalPages": {
                        "type": "integer",
                        "description": "Total number of pages"
                    },
                    "totalCount": {
                        "type": "integer",
                        "description": "Total number of knowledge entries"
                    }
                }
            },
            "SearchResponse": {
                "type": "object",
                "properties": {
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KnowledgeBaseEntry"
                        },
                        "description": "Array of search results"
                    },
                    "currentPage": {
                        "type": "integer",
                        "description": "Current page number"
                    },
                    "totalPages": {
                        "type": "integer",
                        "description": "Total number of pages"
                    },
                    "totalCount": {
                        "type": "integer",
                        "description": "Total number of search results"
                    }
                }
            },
            "HealthResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "Health status",
                        "enum": [
                            "OK",
                            "ERROR",
                            "WARNING"
                        ]
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Health check timestamp"
                    },
                    "version": {
                        "type": "string",
                        "description": "Service version",
                        "nullable": true
                    }
                }
            },
            "ErrorResponse": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                    },
                    "message": {
                        "type": "string",
                        "description": "Error message"
                    }
                }
            },
            "MetricsResponse": {
                "type": "object",
                "properties": {
                    "metrics": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Metrics"
                        },
                        "description": "Array of system metrics"
                    }
                }
            },
            "Metrics": {
                "type": "object",
                "properties": {
                    "analyses": {
                        "type": "integer",
                        "description": "Total number of LLM analyses performed"
                    },
                    "users": {
                        "type": "integer",
                        "description": "Total number of registered users"
                    },
                    "total_texts": {
                        "type": "integer",
                        "description": "Total number of texts processed"
                    },
                    "avg_confidence": {
                        "type": "number",
                        "format": "float",
                        "description": "Average confidence score across all analyses",
                        "minimum": 0,
                        "maximum": 1
                    }
                }
            }
        }
    }
}
